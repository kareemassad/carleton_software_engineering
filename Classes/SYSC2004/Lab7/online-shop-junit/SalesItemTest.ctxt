#BlueJ class context
comment0.target=SalesItemTest
comment0.text=\r\n\ The\ test\ class\ SalesItemTest.\r\n\r\n\ @author\ \ mik\r\n\ @version\ 0.1\r\n
comment1.params=
comment1.target=SalesItemTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ SalesItemTest\r\n
comment10.params=
comment10.target=void\ addComment()
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ testAddComment()
comment4.text=\r\n\ Test\ that\ a\ comment\ can\ be\ added,\ and\ that\ the\ comment\ count\ is\ correct\ afterwards.\r\n
comment5.params=
comment5.target=void\ testThreeComments()
comment5.text=\r\n\ Test\ that\ 3\ comments\ can\ be\ added,\ and\ that\ the\ comment\ count\ is\ correct\ afterwards.\r\n
comment6.params=
comment6.target=void\ testExistingAuthor()
comment6.text=\r\n\ Test\ that\ the\ same\ author\ can\ only\ postce\ once\r\n
comment7.params=
comment7.target=void\ testCommentRatings()
comment7.text=\r\n\ Test\ that\ checks\ max\ and\ miniumum\ boundaries\ for\ ratings\r\n
comment8.params=
comment8.target=void\ testIllegalRating()
comment8.text=\r\n\ Test\ that\ a\ comment\ using\ an\ illegal\ rating\ value\ is\ rejected.\r\n
comment9.params=
comment9.target=void\ testInit()
comment9.text=\r\n\ Test\ that\ a\ sales\ item\ is\ correctly\ initialised\ (name\ and\ price).\r\n
numComments=11
